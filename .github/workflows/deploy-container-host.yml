on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy-container-host.yml'
      - 'container-host/**'
  workflow_dispatch:

name: Deploy Container Host

jobs:
  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4

    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - uses: ashmind/arm-deploy@main
      with:
        scope: 'resourcegroup'
        deploymentName: "sharplab-container-host"
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP }}
        template: ./container-host/template.json
        parameters: './container-host/parameters.json
          virtualMachines_adminUsername=${{ secrets.CONTAINER_HOST_ADMIN_USERNAME }}
          virtualMachines_adminPassword=${{ secrets.CONTAINER_HOST_ADMIN_PASSWORD }}'

    # TODO: Fail build if this fails -- currently it always reports success
    - name: "VM: Initialize-ContainerHost.ps1"
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt

          telemetry_connection_string=$(az monitor app-insights component show \
            --app sharplab-container-host-insights \
            -g ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --query connectionString \
            --output tsv)
          echo "::add-mask::${telemetry_connection_string}"

          authorization_token=$(az keyvault secret show \
            --name ContainerHostAuthorizationToken \
            --vault-name sharplab \
            --query value \
            --output tsv)
          echo "::add-mask::${authorization_token}"

          az vm run-command invoke \
            --command-id RunPowerShellScript \
            --name sharplab-container-host \
            -g ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --scripts @container-host/Initialize-ContainerHost.ps1 \
            --parameters "TelemetryConnectionString=${telemetry_connection_string}" \
                         "AuthorizationToken=${authorization_token}"